name: Commit jobs
on: [push, pull_request]
jobs:
    pylint:
        name: Linting - Pylint
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                python-version: [2,3]
        steps:
            - name: Check out code
              uses: actions/checkout@v2
              with:
                  lfs: true
            - name: Lint in docker
              run: |
                  docker run \
                      --rm \
                      --interactive \
                      --volume ${{ github.workspace }}:/host_dir \
                      --workdir /host_dir ubuntu:20.04 \
                      bash -c \
                      "./Tools/Lint/setup.sh && python3 Tools/Lint/pylint.py --python-versions ${{ matrix.python-version }}"
    create-installer:
        name: Create installer
        runs-on: windows-2019
        steps:
            - name: Check out code
              uses: actions/checkout@v2
              with:
                  lfs: true
            # - name: test out installer
            - name: Build
              run: |
                  Powershell -NoProfile -ExecutionPolicy Bypass -File "%APPVEYOR_BUILD_FOLDER%\Tools\CI\fix_sources_timestamps.ps1"
                  "%APPVEYOR_BUILD_FOLDER%\Tools\_AppveyorTestBuild.bat"
                  "%APPVEYOR_BUILD_FOLDER%\Tools\CI\DeployBuild.bat"
                  "%APPVEYOR_BUILD_FOLDER%\Tools\_TrimFBuildCache.bat"
            - name: Create a dummy file
              run: echo "some text" > hello.txt
            - name: Upload a test file
              uses: actions/upload-artifact@v2
              with:
                name: hello
                path: hello.txt
    validate-xml:
        name: Validate XMLs
        runs-on: windows-2019
        steps:
            - name: Check out code
              uses: actions/checkout@v2
              with:
                  lfs: true
            - name: Run XmlValidator
              run: |
                cd Tools
                XmlValidator.exe -a
